#!/bin/bash
#
# Maintainer: Christoph J. Thompson <cjsthompson@gmail.com>

source /usr/src/ports/Build/build.sh

NAME=util_linux
VERSION=2.22.2
BUILD=4
DEPENDS=('udev >= 173-1')
OPTDEPENDS=('libxml >= 2.9.0-2' 'xz >= 5.0.4-1' 'bzip2 >= 1.0.6-1')

# Description

cat > ${PKG}/install/slack-desc <<EOF
# HOW TO EDIT THIS FILE:
# The "handy ruler" below makes it easier to edit a package description.  Line
# up the first '|' above the ':' following the base package name, and the '|'
# on the right side marks the last column you can put a character in. You must
# make exactly 11 lines for the formatting to be correct.  It's also
# customary to leave one space after the ':'.

$(padd)|-----handy-ruler------------------------------------------------------|
${NAME}: util_linux (a huge collection of essential utilities)
${NAME}:
${NAME}: The util-linux package is a huge collection of random utilities that
${NAME}: are essential to run a Linux system.
${NAME}:
${NAME}: Homepage: https://github.com/karelzak/util-linux
${NAME}:
${NAME}:
${NAME}:
${NAME}:
${NAME}:
EOF

cat >> ${PKG}/install/doinst.sh <<EOF
#!/bin/sh

config() {
  NEW="\$1"
  OLD="\$(dirname \$NEW)/\$(basename \$NEW .new)"
  # If there's no config file by that name, mv it over:
  if [ ! -r \$OLD ]; then
    mv \$NEW \$OLD
  elif [ "\$(cat \$OLD | md5sum)" = "\$(cat \$NEW | md5sum)" ]; then
    # toss the redundant copy
    rm \$NEW
  fi
  # Otherwise, we leave the .new copy for the admin to consider...
}

# Keep same perms on rc.serial.new:
if [ -e etc/rc.d/rc.serial ]; then
  cp -a etc/rc.d/rc.serial etc/rc.d/rc.serial.new.incoming
  cat etc/rc.d/rc.serial.new > etc/rc.d/rc.serial.new.incoming
  mv etc/rc.d/rc.serial.new.incoming etc/rc.d/rc.serial.new
fi

config etc/rc.d/rc.serial.new
config etc/serial.conf.new

# Install the texinfo files
if [ -x /usr/bin/install-info ]; then
  /usr/bin/install-info --info-dir=${SYS_DIR[info]} ${SYS_DIR[info]}/which.info.gz 2> /dev/null
fi
EOF

# Sources

SRCNAME[0]=util-linux
SRCVERS[0]=${VERSION}
SRCPACK[0]=http://www.kernel.org/pub/linux/utils/${SRCNAME[0]}/v${SRCVERS[0]}/${SRCNAME[0]}-${SRCVERS[0]}.tar.xz
SRCCOPY[0]="GPL3 GPL2 LGPL2 LGPL21 BSD4"

build0()
{
sed -i 's|$(usrlib_execdir)/pkgconfig|$(datarootdir)/pkgconfig|g' Makefile.in
#FIXME: PAM: undisable su, sulogin, login when switching
#FIXME: when switching to PAM -> --enable-login-utils and fix up 'shadow'
#FIXME: sysvinit: remove mountpoint from there
#FIXME: --enable-socket-activation --> when switching to systemd
CFLAGS="${FLAGS}" CXXFLAGS="${FLAGS}" \
./configure \
 --build="${ARCH}-slackware-linux" \
 --disable-dependency-tracking \
 --disable-silent-rules \
 --disable-rpath \
 --enable-static=no \
 --enable-shared=yes \
 --prefix="${SYS_DIR[usr]}" \
 --mandir="${SYS_DIR[man]}" \
 --sysconfdir="${SYS_DIR[etc]}" \
 --libdir="${SYS_DIR[lib]}" \
 --localstatedir="${SYS_DIR[var]}" \
 --bindir="${SYS_DIR[bin]}" \
 --sbindir="${SYS_DIR[sbin]}" \
 --with-systemdsystemunitdir="${SYS_DIR[systemdsystemunitdir]}" \
 --disable-login \
 --disable-su \
 --disable-sulogin \
 --disable-uuidd \
 --disable-last \
 --enable-fs-paths-default="/usr/sbin:/sbin:/sbin/fs.d:/sbin/fs" \
 --enable-libblkid \
 --enable-libmount \
 --enable-libuuid \
 --enable-arch \
 --enable-agetty \
 --enable-mesg \
 --enable-raw \
 --enable-rename \
 --enable-reset \
 --enable-schedutils \
 --enable-wall \
 --enable-write \
 --enable-use-tty-group
make ${JOBS} V=1
make install DESTDIR="${PKG}"
doc AUTHORS
changelog NEWS
rm -rf ${PKG}${SYS_DIR[man]}/ru
#FIXME: compat
(
  cd ${PKG}${SYS_DIR[bin]}
  ln -sf ${SYS_DIR[sbin]}/fdformat
  ln -sf ${SYS_DIR[sbin]}/readprofile
  ln -sf ${SYS_DIR[sbin]}/tunelp
  ln -sf ${SYS_DIR[sbin]}/raw
  cd ${PKG}/usr/sbin
  ln -sf hwclock clock
  ln -sf ${SYS_DIR[bin]}/mount
  ln -sf ${SYS_DIR[bin]}/umount
  cd ${PKG}${SYS_DIR[man]}/man8
  echo ".so man1/hwclock.8" > clock.8

  install.dir ${PKG}/sbin
  cd ${PKG}/sbin
  ln -sf ${SYS_DIR[bin]}/mount
  ln -sf ${SYS_DIR[bin]}/umount
  ln -sf ${SYS_DIR[sbin]}/ctrlaltdel
  ln -sf ${SYS_DIR[sbin]}/blkid
  ln -sf ${SYS_DIR[sbin]}/fdisk
  ln -sf ${SYS_DIR[sbin]}/fsck.minix
  ln -sf ${SYS_DIR[sbin]}/switch_root
  ln -sf ${SYS_DIR[sbin]}/mkfs.bfs
  ln -sf ${SYS_DIR[sbin]}/mkfs
  ln -sf ${SYS_DIR[sbin]}/cfdisk
  ln -sf ${SYS_DIR[sbin]}/hwclock
  ln -sf ${SYS_DIR[sbin]}/hwclock clock
  ln -sf ${SYS_DIR[sbin]}/raw
  ln -sf ${SYS_DIR[sbin]}/mkswap
  ln -sf ${SYS_DIR[sbin]}/agetty
  ln -sf ${SYS_DIR[sbin]}/fsck.cramfs
  ln -sf ${SYS_DIR[sbin]}/losetup
  ln -sf ${SYS_DIR[sbin]}/findfs
  ln -sf ${SYS_DIR[sbin]}/mkfs.cramfs
  ln -sf ${SYS_DIR[sbin]}/fsfreeze
  ln -sf ${SYS_DIR[sbin]}/sfdisk
  ln -sf ${SYS_DIR[sbin]}/fstrim
  ln -sf ${SYS_DIR[sbin]}/swapon
  ln -sf ${SYS_DIR[sbin]}/swapon swapoff
  ln -sf ${SYS_DIR[sbin]}/fsck
  ln -sf ${SYS_DIR[sbin]}/mkfs.minix
  ln -sf ${SYS_DIR[sbin]}/swaplabel
  ln -sf ${SYS_DIR[sbin]}/wipefs
  ln -sf ${SYS_DIR[sbin]}/pivot_root
  ln -sf ${SYS_DIR[sbin]}/blockdev
)
}

SRCNAME[1]=adjtimex
SRCVERS[1]=1.29
SRCPACK[1]=http://security.ubuntu.com/ubuntu/pool/universe/a/${SRCNAME[1]}/${SRCNAME[1]}_${SRCVERS[1]}.orig.tar.gz
SRCCOPY[1]="GPL2"

build1()
{
CFLAGS="${FLAGS}" CXXFLAGS="${FLAGS}" \
./configure \
 --build="${ARCH}-slackware-linux" \
 --prefix="${SYS_DIR[usr]}" \
 --mandir="${SYS_DIR[man]}" \
 --sysconfdir="${SYS_DIR[etc]}" \
 --libdir="${SYS_DIR[lib]}" \
 --localstatedir="${SYS_DIR[var]}" \
 --sbindir="${SYS_DIR[sbin]}"
make ${JOBS}
make install DESTDIR="${PKG}"
changelog ChangeLog
#FIXME: compat
(
install.dir ${PKG}/sbin
cd ${PKG}/sbin
ln -sf ${SYS_DIR[sbin]}/adjtimex
)
}

SRCNAME[2]=setserial
SRCVERS[2]=2.17
SRCPACK[2]=${URL[sf]}/${SRCNAME[2]}/${SRCNAME[2]}-${SRCVERS[2]}.tar.gz
SRCCOPY[2]="GPL2"

build2()
{
CFLAGS="${FLAGS}" CXXFLAGS="${FLAGS}" \
./configure \
 --build="${ARCH}-slackware-linux" \
 --prefix="${SYS_DIR[usr]}" \
 --mandir="${SYS_DIR[man]}" \
 --sysconfdir="${SYS_DIR[etc]}" \
 --libdir="${SYS_DIR[lib]}" \
 --localstatedir="${SYS_DIR[var]}" \
 --bindir="${SYS_DIR[sbin]}"
make ${JOBS}
make install DESTDIR="${PKG}"
install.dir ${PKG}${SYS_DIR[etc]}/rc.d
install.dat rc.serial ${PKG}${SYS_DIR[etc]}/rc.d/rc.serial.new
install.dat serial.conf ${PKG}${SYS_DIR[etc]}/serial.conf.new
}

SRCNAME[3]=net-tools
SRCVERS[3]=20130121
SRCPACK[3]=http://www.tazenda.demon.co.uk/phil/${SRCNAME[3]}/${SRCNAME[3]}-${SRCVERS[3]}.tar.xz

build3()
{
make version.h
make ${JOBS} CFLAGS="${FLAGS}"
make install-hostname \
 DESTDIR="${PKG}" \
 MANDIR="${SYS_DIR[man]}" \
 BINDIR="${SYS_DIR[bin]}" \
 SBINDIR="${SYS_DIR[sbin]}"
}

SRCNAME[4]=sysfsutils
SRCVERS[4]=2.1.0
SRCPACK[4]=${URL[sf]}/linux-diag/${SRCNAME[4]}-${SRCVERS[4]}.tar.gz
SRCCOPY[4]="GPL2 LGPL21"

build4()
{
CFLAGS="${FLAGS}" CXXFLAGS="${FLAGS}" \
./configure \
 --build="${ARCH}-slackware-linux" \
 --disable-dependency-tracking \
 --enable-static=no \
 --enable-shared=yes \
 --prefix="${SYS_DIR[usr]}" \
 --mandir="${SYS_DIR[man]}" \
 --sysconfdir="${SYS_DIR[etc]}" \
 --libdir="${SYS_DIR[lib]}" \
 --localstatedir="${SYS_DIR[var]}"
make ${JOBS}
make install DESTDIR="${PKG}"
doc AUTHORS CREDITS docs/libsysfs.txt
changelog ChangeLog
}

SRCNAME[5]=slackwareutils
SRCVERS[5]=1.0.2
SRCPACK[5]=http://github.com/downloads/cjsthompson/${SRCNAME[5]}/${SRCNAME[5]}-${SRCVERS[5]}.tar.xz

build5()
{
make ${JOBS} CFLAGS="${FLAGS}"
make install DESTDIR="${PKG}" MANDIR="${SYS_DIR[man]}/man1"
}

SRCNAME[6]=tree
SRCVERS[6]=1.6.0
SRCPACK[6]=ftp://mama.indstate.edu/linux/tree/${SRCNAME[6]}-${SRCVERS[6]}.tgz
SRCCOPY[6]="GPL2"

build6()
{
make ${JOBS} OPTS="${FLAGS}"
make install prefix="${PKG}${SYS_DIR[usr]}" MANDIR="${PKG}${SYS_DIR[man]}/man1"
doc README
changelog CHANGES
}

SRCNAME[7]=debianutils
SRCVERS[7]=4.3.2
SRCPACK[7]=http://ftp.de.debian.org/debian/pool/main/d/${SRCNAME[7]}/${SRCNAME[7]}_${SRCVERS[7]}.tar.gz

build7()
{
CFLAGS="${FLAGS}" CXXFLAGS="${FLAGS}" \
./configure \
 --build="${ARCH}-slackware-linux" \
 --disable-dependency-tracking \
 --prefix="${SYS_DIR[usr]}" \
 --mandir="${SYS_DIR[man]}" \
 --sysconfdir="${SYS_DIR[etc]}" \
 --libdir="${SYS_DIR[lib]}" \
 --localstatedir="${SYS_DIR[var]}"
make ${JOBS}
make install DESTDIR="${PKG}"
rm -f \
 ${PKG}${SYS_DIR[bin]}/{which,run-parts} \
 ${PKG}${SYS_DIR[sbin]}/installkernel \
 ${PKG}${SYS_DIR[man]}/man{1,8}/{which,run-parts,installkernel}.? \
 ${PKG}${SYS_DIR[man]}/??/man{1,8}/{which,run-parts,installkernel}.?
}

SRCNAME[8]=which
SRCVERS[8]=2.20
SRCPACK[8]=http://carlo17.home.xs4all.nl/${SRCNAME[8]}/${SRCNAME[8]}-${SRCVERS[8]}.tar.gz
SRCCOPY[8]="GPL3"

build8()
{
CFLAGS="${FLAGS}" CXXFLAGS="${FLAGS}" \
./configure \
 --build="${ARCH}-slackware-linux" \
 --disable-dependency-tracking \
 --prefix="${SYS_DIR[usr]}" \
 --mandir="${SYS_DIR[man]}" \
 --infodir="${SYS_DIR[info]}" \
 --sysconfdir="${SYS_DIR[etc]}" \
 --libdir="${SYS_DIR[lib]}" \
 --localstatedir="${SYS_DIR[var]}"
make ${JOBS}
make install DESTDIR="${PKG}"
doc AUTHORS
changelog NEWS
}

SRCNAME[9]=procps-ng
SRCVERS[9]=3.3.6
SRCPACK[9]=${URL[sf]}/${SRCNAME[9]}/Production/${SRCNAME[9]}-${SRCVERS[9]}.tar.xz
SRCCOPY[9]="GPL2 LGPL2"

build9()
{
sed -i 's|$(libdir)/pkgconfig|$(datarootdir)/pkgconfig|g' proc/Makefile.in
CFLAGS="${FLAGS}" CXXFLAGS="${FLAGS}" \
./configure \
 --build="${ARCH}-slackware-linux" \
 --disable-dependency-tracking \
 --disable-rpath \
 --enable-static=no \
 --enable-shared=yes \
 --prefix="${SYS_DIR[usr]}" \
 --mandir="${SYS_DIR[man]}" \
 --sysconfdir="${SYS_DIR[etc]}" \
 --libdir="${SYS_DIR[lib]}" \
 --localstatedir="${SYS_DIR[var]}" \
 --docdir="${SYS_DIR[doc]}/${SRCNAME[0]}-${SRCVERS[0]}" \
 --disable-kill \
 --disable-skill \
 --enable-w-from \
 --enable-watch8bit
make ${JOBS}
make install DESTDIR="${PKG}"
doc AUTHORS
changelog NEWS
#FIXME: everything should end up in /usr not /usr/usr
mv ${PKG}${SYS_DIR[usr]}/usr/bin/* ${PKG}${SYS_DIR[bin]}
rm -rf ${PKG}${SYS_DIR[usr]}/usr
(
  cd ${PKG}${SYS_DIR[bin]}
  ln -sf pkill pgrep
)
}

SRCNAME[10]=procinfo-ng
SRCVERS[10]=2.0.304
SRCPACK[10]=${URL[sf]}/procinfo-ng/${SRCNAME[10]}/${SRCVERS[10]}/${SRCNAME[10]}-${SRCVERS[10]}.tar.bz2
SRCCOPY[10]="GPL2 LGPL21"

build10()
{
CFLAGS="${FLAGS}" CXXFLAGS="${FLAGS}" \
./configure \
 --build="${ARCH}-slackware-linux" \
 --prefix="${SYS_DIR[usr]}" \
 --mandir="${SYS_DIR[man]}" \
 --sysconfdir="${SYS_DIR[etc]}" \
 --libdir="${SYS_DIR[lib]}" \
 --localstatedir="${SYS_DIR[var]}"
make ${JOBS}
make install DESTDIR="${PKG}"
}

SRCNAME[11]=psmisc
SRCVERS[11]=22.20
SRCPACK[11]=${URL[sf]}/psmisc/${SRCNAME[11]}/${SRCNAME[11]}-${SRCVERS[11]}.tar.gz
SRCCOPY[11]="GPL2"

build11()
{
CFLAGS="${FLAGS}" CXXFLAGS="${FLAGS}" \
./configure \
 --build="${ARCH}-slackware-linux" \
 --disable-dependency-tracking \
 --disable-rpath \
 --prefix="${SYS_DIR[usr]}" \
 --mandir="${SYS_DIR[man]}" \
 --sysconfdir="${SYS_DIR[etc]}" \
 --libdir="${SYS_DIR[lib]}" \
 --localstatedir="${SYS_DIR[var]}"
make ${JOBS}
make install DESTDIR="${PKG}"
doc AUTHORS
changelog ChangeLog
echo ".so man1/pstree.1" > ${PKG}${SYS_DIR[man]}/man1/pstree.x11.1
}

SRCNAME[12]=libarchive
SRCVERS[12]=3.1.2
SRCPACK[12]=http://libarchive.googlecode.com/files/${SRCNAME[12]}-${SRCVERS[12]}.tar.gz
SRCCOPY[12]="BSD2"

build12()
{
sed -i 's|$(libdir)/pkgconfig|$(datarootdir)/pkgconfig|g' Makefile.in
CFLAGS="${FLAGS}" CXXFLAGS="${FLAGS}" \
./configure \
 --build="${ARCH}-slackware-linux" \
 --disable-dependency-tracking \
 --disable-silent-rules \
 --enable-static=no \
 --enable-shared=yes \
 --prefix="${SYS_DIR[usr]}" \
 --mandir="${SYS_DIR[man]}" \
 --sysconfdir="${SYS_DIR[etc]}" \
 --localstatedir="${SYS_DIR[var]}" \
 --libdir="${SYS_DIR[lib]}" \
 --includedir="${SYS_DIR[include]}/archive" \
 --enable-posix-regex-lib=libc \
 --enable-bsdtar=shared \
 --enable-bsdcpio=shared \
 --without-expat \
 --without-openssl
#NOTE: can it replace uu{en,de}code ?
#FIXME: Use CMake
#cmake \
# -DENABLE_NETTLE:BOOL="on" \
# -DENABLE_OPENSSL:BOOL="off" \
# -DENABLE_TAR_SHARED:BOOL="on" \
# -DENABLE_CPIO_SHARED:BOOL="on" \
# -DENABLE_XATTR:BOOL="on" \
# -DENABLE_ACL:BOOL="on" \
# -DENABLE_ICONV:BOOL="on" \
#CMakeLists.txt
make ${JOBS} V=1
make check
make install DESTDIR="${PKG}"
changelog NEWS
}
